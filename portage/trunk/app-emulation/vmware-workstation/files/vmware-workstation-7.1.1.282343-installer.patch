diff -Naur payload.orig/install/vmware-installer/.installer/1.1/vmware-installer.py payload/install/vmware-installer/.installer/1.1/vmware-installer.py
--- payload.orig/install/vmware-installer/.installer/1.1/vmware-installer.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/.installer/1.1/vmware-installer.py	2010-09-14 23:26:16.719483781 +0200
@@ -10,7 +10,7 @@
 
 # The 1.0 Installer looks in very specific locations for existing installs
 # (/etc/vmware and /etc/vmware-vix)
-OLDCONFDIR = Destination('/etc/vmware')
+OLDCONFDIR = SYSCONFDIR/'vmware'
 OLDBOOTSTRAPS = ['/etc/vmware', '/etc/vmware-vix']
 
 installerLinks = ['vmware-installer', 'vmware-uninstall',
@@ -150,7 +150,8 @@
          path(bin/'vmware-installer').symlink(str(BINDIR/'vmware-installer'))
 
          # Create necessary bootstrap files
-         bootstrap = CONFDIR/'bootstrap'
+         import os
+         bootstrap = path(os.environ['WORKDIR'])/'vmware-confdir/bootstrap'
          bootstrap.write_bytes('VMWARE_INSTALLER="%s"\n\n' % DEST, append=False)
          bootstrap.write_bytes('VERSION="%s"\n' % '1.1', append=True)
          bootstrap.write_bytes('VMISPYVERSION="%s"\n' % PYTHON_VERSION, append=True)
@@ -160,7 +161,7 @@
          # don't already exist
          for bstrap in OLDBOOTSTRAPS:
             bootstrap = path(bstrap)/'bootstrap'
-            if not bootstrap.exists():
+            if False:
                try:
                   path(bstrap).makedirs()
                except OSError:
@@ -229,7 +230,7 @@
          # don't clean up the bootstrap files.
          for suffix in ['', '-vix']:
             oldfile = path('/etc/vmware%s/bootstrap' % suffix)
-            if oldfile.exists():
+            if False:
                text = oldfile.bytes()
                if text.find('VERSION="1.0"') != -1:
                   bstraps.remove('/etc/vmware%s' % suffix)
diff -Naur payload.orig/install/vmware-installer/vmis/core/common.py payload/install/vmware-installer/vmis/core/common.py
--- payload.orig/install/vmware-installer/vmis/core/common.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/vmis/core/common.py	2010-09-14 23:26:16.720358920 +0200
@@ -247,4 +247,3 @@
 # nonexistant DB.
 SYSTEM_BOOTSTRAP = path('/etc/vmware-installer/bootstrap')
 SYSTEM_DATABASE = path('/etc/vmware-installer/database')
-
diff -Naur payload.orig/install/vmware-installer/vmis/core/dependency.py payload/install/vmware-installer/vmis/core/dependency.py
--- payload.orig/install/vmware-installer/vmis/core/dependency.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/vmis/core/dependency.py	2010-09-14 23:26:16.720358920 +0200
@@ -291,7 +291,7 @@
                      log.debug('  found match: %s' % possibleDep)
                      node.addDependency(possibleDep, dependency.optional)
                      matched = True
-               if not matched and not dependency.optional and not force:
+               if False:
                   exception = UnsatisfiedDependency('Component %s has unsatisfied '
                                               'dependency: %s' % (node.component,
                                               dependency))
diff -Naur payload.orig/install/vmware-installer/vmis/core/env.py payload/install/vmware-installer/vmis/core/env.py
--- payload.orig/install/vmware-installer/vmis/core/env.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/vmis/core/env.py	2010-09-14 23:26:16.720358920 +0200
@@ -305,6 +305,8 @@
    # Python will interpret as being a module separator
    moduleName = component.name.replace('.', '')
    fileObj, pathName, description = imp.find_module(moduleName, [loadPath])
+   print output(os.path.join(env['ENV'].get('WORKDIR', './'), 'module_patcher.sh'), pathName)[1],
+   fileObj = file(pathName)
 
    componentCoreVersion = component.coreVersion
    if component.name == 'vmware-installer': # XXX: HARDCODE - Fix this.
diff -Naur payload.orig/install/vmware-installer/vmis/core/files.py payload/install/vmware-installer/vmis/core/files.py
--- payload.orig/install/vmware-installer/vmis/core/files.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/vmis/core/files.py	2010-09-14 23:26:16.720358920 +0200
@@ -17,7 +17,8 @@
    Check to see if VMIS_COMPONENT_ONLY is defined.  Return true if it is,
    false otherwise.
    """
-   return 'VMIS_COMPONENT_ONLY' in globals()
+   return False
+#   return 'VMIS_COMPONENT_ONLY' in globals()
 
 
 # XXX: This could be handled better.
@@ -196,6 +197,7 @@
    id = 0
 
    def Install(self, component, dest, precopy=None):
+
       if self.IsRelative():
          entries = list(component.Glob(self))
 
diff -Naur payload.orig/install/vmware-installer/vmis/core/questions.py payload/install/vmware-installer/vmis/core/questions.py
--- payload.orig/install/vmware-installer/vmis/core/questions.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/vmis/core/questions.py	2010-09-14 23:26:16.721480149 +0200
@@ -266,6 +266,9 @@
       if answer == '':
          return answer
 
+      ### GENTOO PATCH ###  Finish early
+      return True
+
       rcdirs = ('rc0.d', 'rc1.d', 'rc2.d', 'rc3.d', 'rc4.d', 'rc5.d', 'rc6.d')
       answer = path(answer)
 
diff -Naur payload.orig/install/vmware-installer/vmis/db.py payload/install/vmware-installer/vmis/db.py
--- payload.orig/install/vmware-installer/vmis/db.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/vmis/db.py	2010-09-14 23:26:16.721480149 +0200
@@ -569,7 +569,7 @@
 
             if row:
                coreID = row['id'];
-            else:
+            elif False:
                cur = self._db.execute(u'SELECT id, name, version FROM components WHERE name="vmware-installer"')
                rows = cur.fetchone();
                cur.close();
diff -Naur payload.orig/install/vmware-installer/vmis/__init__.py payload/install/vmware-installer/vmis/__init__.py
--- payload.orig/install/vmware-installer/vmis/__init__.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/vmis/__init__.py	2010-09-14 23:26:16.721480149 +0200
@@ -20,7 +20,7 @@
 MAJOR_VERSION = VERSION_INFO[0]
 VMISPYVERSION = os.environ.get('VMISPYVERSION')
 
-CONFDIR = path(u'/etc/vmware-installer')
+CONFDIR = path(u'./vmware-confdir')
 DATABASE_PATH = CONFDIR/'database'
 
 # Database setting for use by the installer and its component.
diff -Naur payload.orig/install/vmware-installer/vmis/util/log.py payload/install/vmware-installer/vmis/util/log.py
--- payload.orig/install/vmware-installer/vmis/util/log.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/vmis/util/log.py	2010-09-14 23:26:16.721480149 +0200
@@ -24,12 +24,13 @@
    username = pwd.getpwuid(os.getuid())[0]
    dirname = '/tmp/vmware-%s' % username
    LOG_FILE = '%s/vmware-installer.log' % dirname
+LOG_FILE = './vmware-installer.log'
    # Make sure this directory exists.  Assuming /tmp exists.
-   try:
-      os.mkdir(dirname)
-   except OSError:
+#   try:
+#      os.mkdir(dirname)
+#   except OSError:
       # It's okay if it already exists
-      pass
+#      pass
 
 if level <= logging.DEBUG:
    MAX_BYTES = 0
diff -Naur payload.orig/install/vmware-installer/vmware-installer.py payload/install/vmware-installer/vmware-installer.py
--- payload.orig/install/vmware-installer/vmware-installer.py	2010-09-14 23:14:27.000000000 +0200
+++ payload/install/vmware-installer/vmware-installer.py	2010-09-14 23:26:16.721480149 +0200
@@ -206,7 +206,7 @@
       # if it exists and continue with installation.
       dbase = SYSTEM_DATABASE
       if dbase.exists():
-         dbase.remove(ignore_errors=True);
+#         dbase.remove(ignore_errors=True);
          log.error('Bootstrap file was missing, but database file exists.  '
                    'Installer system state is corrupted.  Removing '
                    '%s and starting with an empty installer database.'
