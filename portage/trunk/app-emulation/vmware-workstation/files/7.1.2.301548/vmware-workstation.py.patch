diff -Naur payload.orig/install/vmware-workstation/.installer/7.1.1/vmware-workstation.py payload/install/vmware-workstation/.installer/7.1.1/vmware-workstation.py
--- payload.orig/install/vmware-workstation/.installer/7.1.1/vmware-workstation.py	2010-09-14 23:14:24.000000000 +0200
+++ payload/install/vmware-workstation/.installer/7.1.1/vmware-workstation.py	2010-09-15 00:01:22.009604731 +0200
@@ -4,11 +4,12 @@
 VMware Workstation component installer.
 """
 DEST = LIBDIR/'vmware'
-conf = DEST/'setup/vmware-config'
+import os
+conf = path(os.environ['WORKDIR'])/'vmware-config.sh'
 
-LIMITSFILE = Destination('/etc/security/limits.conf')
+LIMITSFILE = SYSCONFDIR/'security/limits.conf'
 NOFILE_MINIMUM = 4096
-PAMLOGINFILE = Destination('/etc/pam.d/login')
+PAMLOGINFILE = SYSCONFDIR/'pam.d/login'
 
 vmwareSentinel = '# Automatically generated by the VMware Installer - DO NOT REMOVE\n'
 pamLoginLine = 'session    required   pam_limits.so\n'
@@ -109,7 +110,7 @@
       self.SetPermission(DEST/'bin/*', BINARY)
 
       eclipse = self.GetAnswer('eclipse')
-      eclipse and self.AddTarget('Link', DEST/'eclipse-ivd/com.vmware.bfg_1.0.0',
+      False and self.AddTarget('Link', DEST/'eclipse-ivd/com.vmware.bfg_1.0.0',
                                  Destination(eclipse)/'plugins/com.vmware.bfg_1.0.0')
 
    def _killVMwareProcesses(self):
@@ -179,13 +180,13 @@
       # Player is still installed though, so we want to be
       # sure to restart the services for Player.
       script = INITSCRIPTDIR/'vmware'
-      if INITSCRIPTDIR and script.exists():
+      if False and script.exists():
          self.RunCommand(script, 'stop', ignoreErrors=True)
          self.RunCommand(script, 'start')
 
    def _ClearVMwareEclipseINI(self):
       eclipse = self.GetAnswer('eclipse')
-      if eclipse:
+      if False:
          try:
             # Check if our section already exists at the beginning
             # of the file.  If it does clear it.
@@ -202,7 +203,7 @@
    def _ModifyEclipseINI(self):
       eclipse = self.GetAnswer('eclipse')
       log.Debug('ModifyINI: Eclipse is: %s', eclipse)
-      if eclipse:
+      if False:
          log.Debug('ModifyINI: Eclipse path was found at %s', eclipse)
          # Modify the eclipse.ini file to include the lines:
          # -vm
@@ -234,7 +235,7 @@
       missingFeatures = []
       pluginDir = DEST/'eclipse-ng'
       xmlfile = pluginDir/'feature.xml'
-      if xmlfile.exists():
+      if False:
          text = xmlfile.bytes()
          req = str(re.findall('<requires>.*</requires>', text, re.DOTALL))
          reqPlugins = re.findall('import plugin="(.*?)"', str(req), re.DOTALL)
@@ -279,7 +280,7 @@
       # Before installing, we need to make sure that all of our references in that
       # file are ***removed*** or it will cause problems later on reinstall/upgrade.
       artifact = path(eclipse)/'artifacts.xml'
-      if artifact.exists():
+      if False:
          # Load it and remove all <artifact ....></artifact> references with
          # vmware in the name.
          txt = artifact.bytes()
@@ -300,7 +301,7 @@
       eclipse = self.GetAnswer('eclipse')
       eclipseCCPP = self.GetAnswer('eclipseCCPP')
       log.Debug('Eclipse(C/C++): Eclipse is: %s', eclipse)
-      if eclipse and eclipseCCPP.lower() == 'yes':
+      if False and eclipseCCPP.lower() == 'yes':
          if install:
             action = 'installation'
             instCmd = '-installIU'
@@ -488,7 +489,7 @@
       # to check.
       nofileHL = self.GetAnswer('nofileHardLimit')
       if nofileHL and (self.hardLimit != int(nofileHL)):
-         limitsFile = Destination('/etc/security/limits.conf')
+         limitsFile = LIMITSFILE
          if limitsFile.exists():
             self._ClearVMwareLimitsConf(limitsFile, restoreEntry=False)
             log.Debug('Modifying /etc/security/limits.conf hard limit from '
