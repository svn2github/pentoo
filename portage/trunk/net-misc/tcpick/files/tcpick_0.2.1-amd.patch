diff -urN tcpick-0.2.1.org/src/args.c tcpick-0.2.1/src/args.c
--- tcpick-0.2.1.org/src/args.c	2005-01-16 16:19:35.000000000 +0100
+++ tcpick-0.2.1/src/args.c	2014-01-12 13:36:15.991301604 +0100
@@ -149,7 +149,7 @@
 void
 parse_args(int argc, char ** argv)
 {
-	char opt;
+	int opt;
 
 #ifdef HAVE_GETOPT_LONG
 	static struct option long_options[]=
diff -urN tcpick-0.2.1.org/src/datalink.c tcpick-0.2.1/src/datalink.c
--- tcpick-0.2.1.org/src/datalink.c	2004-12-31 14:53:30.000000000 +0100
+++ tcpick-0.2.1/src/datalink.c	2014-01-12 13:57:01.697926978 +0100
@@ -28,6 +28,8 @@
 
 #include "tcpick.h"
 #include "extern.h"
+#include "datalink.h"
+
 
 char *datalink2str(int dl_id)
 {
diff -urN tcpick-0.2.1.org/src/datalink.h tcpick-0.2.1/src/datalink.h
--- tcpick-0.2.1.org/src/datalink.h	1970-01-01 01:00:00.000000000 +0100
+++ tcpick-0.2.1/src/datalink.h	2014-01-12 13:55:20.521263666 +0100
@@ -0,0 +1,39 @@
+/*
+ * datalink.h -- header for calculating datalink offsets
+ * Part of the tcpick project
+ *
+ * Author: Francesco Stablum <duskdruid @ despammed.com>
+ *         Jochen Schlick <josch09 at gmail.com>
+ *
+ * Copyright (C) 2003, 2004  Francesco Stablum
+ * Copyright (C) 2014  Jochen Schlick
+ * 
+ * Licensed under the GPL
+ *
+ */
+
+/* 
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of the
+ * License, or (at you option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
+ * See the GNU General Public License for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111,
+ * USA.
+ */
+
+#ifndef _DATALINK_H
+#define _DATALINK_H
+
+
+char *datalink2str(int dl_id);
+
+
+#endif
diff -urN tcpick-0.2.1.org/src/debug.c tcpick-0.2.1/src/debug.c
--- tcpick-0.2.1.org/src/debug.c	2004-12-31 14:53:30.000000000 +0100
+++ tcpick-0.2.1/src/debug.c	2014-01-12 14:39:16.244509624 +0100
@@ -32,7 +32,7 @@
 print_conn_chain (struct CONN * f)
 {
 	while (f) {
-		printf ("%x->",f);
+		printf ("%p->",f);
 		
 		if (f == f->next) {
 			printf ("inf\n");
@@ -48,7 +48,7 @@
 print_fragment_chain(struct FRAGMENT * f)
 {
 	while (f) {
-		printf ("%x(%i,%i)->",f,f->off,f->len);
+		printf ("%p(%i,%i)->",f,f->off,f->len);
 
 		if (f == f->next) {
 			printf ("inf\n");
diff -urN tcpick-0.2.1.org/src/display.c tcpick-0.2.1/src/display.c
--- tcpick-0.2.1.org/src/display.c	2004-12-31 14:53:30.000000000 +0100
+++ tcpick-0.2.1/src/display.c	2014-01-12 13:29:48.747981116 +0100
@@ -29,6 +29,8 @@
 
 #include "tcpick.h"
 #include "extern.h"
+#include "lookup.h"
+
 
 char * 
 status2str( enum STATUS status )
diff -urN tcpick-0.2.1.org/src/lookup.h tcpick-0.2.1/src/lookup.h
--- tcpick-0.2.1.org/src/lookup.h	2004-12-31 14:53:30.000000000 +0100
+++ tcpick-0.2.1/src/lookup.h	2014-01-12 13:27:07.537986460 +0100
@@ -26,6 +26,11 @@
  * USA.
  */
 
+#ifndef _LOOKUP_H
+#define _LOOKUP_H
+
+
+
 
 struct _l_node /* the node/leaf of the tree */
 {
@@ -40,3 +45,20 @@
 	char * name;
 	struct in_addr ip;
 };
+
+
+char *
+lookup(struct in_addr ia);
+
+char *
+getportname(u_int16_t port);
+
+struct _l_node *
+_l_alloc(struct in_addr, char *);
+
+char *
+_l_get(struct in_addr);
+
+
+
+#endif
diff -urN tcpick-0.2.1.org/src/tcpick.c tcpick-0.2.1/src/tcpick.c
--- tcpick-0.2.1.org/src/tcpick.c	2005-01-18 13:25:36.000000000 +0100
+++ tcpick-0.2.1/src/tcpick.c	2014-01-12 16:16:58.684002152 +0100
@@ -49,6 +49,7 @@
 
 #include "tcpick.h"
 #include "globals.h"
+#include "datalink.h"
 
 char *errbuf[PCAP_ERRBUF_SIZE];
 struct bpf_program filter_compiled;
@@ -180,7 +181,8 @@
 		}
 		
 	} else if( readfile != NULL ) {
-		setuid(getuid());
+		int dummy;
+		dummy = setuid(getuid());
 		msg( 1, c_INTERFACE, 
 		     "%s: reading from %s", 
 		     TCPICK_NAME, readfile );
@@ -232,13 +234,19 @@
 
 	/* compiling the filter */
 	if( filter != NULL ) {
+		bpf_u_int32 nm;
 		msg(1, c_SETTING, "setting filter: \"%s\"",filter);
 		
+		if ( net == NULL) {
+		   nm = PCAP_NETMASK_UNKNOWN;
+		} else {
+		   nm = (int) inet_addr(net);
+		}
 		if( ( pcap_compile( descr,
 				    &filter_compiled,
 				    filter, 
 				    0, 
-				    (int)net 
+				    nm 
 			      ) == -1) )
 			err("error compiling filter \"%s\"",filter);
 
diff -urN tcpick-0.2.1.org/src/time.c tcpick-0.2.1/src/time.c
--- tcpick-0.2.1.org/src/time.c	2005-01-09 01:21:44.000000000 +0100
+++ tcpick-0.2.1/src/time.c	2014-01-12 14:47:38.897826291 +0100
@@ -42,7 +42,7 @@
   tzp = (struct timezone * ) S_malloc( sizeof(struct timezone) );
 
   memset(tp,  0, sizeof(struct timeval));
-  memset(tzp, 0, sizeof(struct timeval));
+  memset(tzp, 0, sizeof(struct timezone));
   
   if(gettimeofday(tp, tzp)) {
 
@@ -54,18 +54,18 @@
 	  switch (flags.displaytime) {
 		  
 	  case ONLYTIME:
-		  sprintf(ret,"%2.2d:%2.2d:%2.2d.%6.6d",
+		  sprintf(ret,"%2.2d:%2.2d:%2.2d.%6.6ld",
 			  brokentime->tm_hour,
 			  brokentime->tm_min,
 			  brokentime->tm_sec,
-			  tp->tv_usec
+			  (long)tp->tv_usec
 			  );
 		  break;
 
 	  case TIMEDATE:
 		  sprintf(ret,
 			  "%2.2d-%2.2d-%2.2d " /* date */
-			  "%2.2d:%2.2d:%2.2d.%6.6d", /* time */
+			  "%2.2d:%2.2d:%2.2d.%6.6ld", /* time */
 
 			  /* date */
 			  brokentime->tm_mday,
@@ -79,7 +79,7 @@
 			  brokentime->tm_hour,
 			  brokentime->tm_min,
 			  brokentime->tm_sec,
-			  tp->tv_usec
+			  (long)tp->tv_usec
 			  );
 		  break;
 		  
diff -urN tcpick-0.2.1.org/src/tracker.c tcpick-0.2.1/src/tracker.c
--- tcpick-0.2.1.org/src/tracker.c	2004-12-31 14:53:30.000000000 +0100
+++ tcpick-0.2.1/src/tracker.c	2014-01-12 13:42:03.844623406 +0100
@@ -99,7 +99,12 @@
 	if( curr->next == NULL )
 		last_conn = prev_ring;
 	
-	free_desc( &(curr->client) );
+	free_desc( &(curr->client), 1 );
+	if( flags.writer.type == UNIQUE ) {
+		free_desc( &(curr->server), 0 );
+	} else {
+		free_desc( &(curr->client), 1 );
+	}
 	free_desc( &(curr->server) );
 	S_free( curr );
 
@@ -124,7 +129,7 @@
 		count_opened--;
 }
 
-int free_desc( struct HOST_DESC * desc )
+int free_desc( struct HOST_DESC * desc, int free_filename_too )
 /* frees the host descriptor and closes the file */
 {
 	struct FRAGMENT * tmp;
@@ -134,7 +139,7 @@
 		if (flags.writer.type == UNIQUE)
 			desc->oth->file = NULL;
 	}
-	if( desc->filename ) {
+	if( desc->filename && free_filename_too ) {
 		S_free( desc->filename );
 		desc->filename = NULL;
 	}
diff -urN tcpick-0.2.1.org/src/write.c tcpick-0.2.1/src/write.c
--- tcpick-0.2.1.org/src/write.c	2005-01-09 00:54:47.000000000 +0100
+++ tcpick-0.2.1/src/write.c	2014-01-12 13:30:17.171313500 +0100
@@ -27,6 +27,8 @@
 
 #include "tcpick.h"
 #include "extern.h"
+#include "lookup.h"
+
 
 __inline__ char * 
 avail_filename(struct CONN * conn_ptr, 
